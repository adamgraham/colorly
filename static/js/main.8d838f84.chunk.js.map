{"version":3,"sources":["components/AboutDialog.js","utils/eventHandlers.js","components/ColorPicker.js","actions.js","selectors.js","utils/hoc.js","utils/hooks.js","pages/ColorBlindness.js","utils/format.js","pages/ContrastRatio.js","pages/GradientPreview.js","pages/Harmonies.js","pages/Hues.js","pages/Lightness.js","pages/Saturation.js","routes.js","pages/TintsAndShades.js","utils/colors.js","components/AppHeader.js","components/ColorCard.js","components/ColorGroup.js","components/ColorPalette.js","components/CopyToClipboardToast.js","components/PageHeader.js","middleware.js","reducers.js","store.js","App.js","serviceWorker.js","index.js"],"names":["AboutDialog","useState","infoDialogOpen","setInfoDialogOpen","className","color","onClick","open","onClose","href","rel","target","enterKeyHandler","callback","event","defaultPrevented","handled","key","preventDefault","ColorPicker","React","forwardRef","ref","id","alignment","allowRedo","allowUndo","onColorChange","onShuffleClick","onUndoClick","onRedoClick","value","input","picker","setColor","hasError","setHasError","useEffect","pickColor","useMemo","debounce","pickedColor","toLowerCase","buttons","disabled","reverse","classNames","onChange","type","style","backgroundColor","error","onKeyDown","Color","blur","onBlur","inputColor","hex","displayName","setBaseColor","getBaseColor","state","baseColors","baseColorIndex","getSecondaryBaseColor","secondaryBaseColors","secondaryBaseColorIndex","getSecondaryBaseColors","getSelectedHarmony","selectedHarmony","getSelectedColorBlindness","selectedColorBlindness","canUndoBaseColor","canUndoSecondaryBaseColor","canRedoBaseColor","length","canRedoSecondaryBaseColor","withBaseColor","WrappedComponent","WithBaseColor","props","dispatch","useDispatch","baseColor","useSelector","secondaryBaseColor","setSecondaryBaseColor","name","routes","protanopia","path","blinder","protanomaly","deuteranopia","deuteranomaly","tritanopia","tritanomaly","achromatopsia","achromatomaly","withRouter","history","menuAnchor","setMenuAnchor","matchedRoute","Object","values","find","route","location","pathname","includes","push","closeMenu","layout","currentTarget","startIcon","anchorEl","keepMounted","Boolean","map","colorBlindness","onSelectColor","formatRGB","red","Math","round","green","blue","formatCMYK","cyan","magenta","yellow","black","formatHSL","hue","saturation","saturationl","lightness","formatHSV","saturationv","formatLuminance","luminance","luminosity","Fragment","Number","EPSILON","renderLoremIpsum","fontSize","_baseColor","_secondaryColor","contrast","level","title","toFixed","label","clickable","component","copyable","position","properties","hideProperties","text","secondaryColors","background","analogous","hues","monochromatic","complement","splitComplement","doubleComplement","triadic","tetradic","harmony","rotate","size","increment","tintsAndShades","exact","Lightness","Saturation","harmonies","Harmonies","useSubheader","Hues","ColorBlindness","contrastRatio","ContrastRatio","useSecondaryColor","gradientPreview","GradientPreview","Routes","useLocation","URLSearchParams","search","get","hash","Page","white","gray","randomColorHex","r","random","g","b","_canRedoBaseColor","_canRedoSecondaryBaseColor","_canUndoBaseColor","_canUndoSecondaryBaseColor","pageMenuAnchor","setPageMenuAnchor","document","addEventListener","paste","clipboardData","window","getData","strColor","s","Option","isValidColor","closePageMenu","children","light","dark","colorData","setColorData","_color","whiteContrast","blackContrast","selectColor","role","tabIndex","stopPropagation","dispatchEvent","CustomEvent","detail","property","ColorGroup","types","tints","shades","tones","lighten","darken","saturated","desaturated","ColorPalette","includeBaseColor","reversed","palette","setPalette","base","colors","i","weight","mix","index","CopyToClipboardToast","copy","setCopy","listener","str","element","createElement","setAttribute","left","body","appendChild","select","execCommand","removeChild","copyToClipboard","setTimeout","removeEventListener","action","autoHideDuration","message","PageHeader","enhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","defaultState","addBaseColor","slice","concat","addSecondaryBaseColor","handlers","SET_SELECTED_HARMONY","SET_SELECTED_COLOR_BLINDNESS","SET_BASE_COLOR","SET_SECONDARY_BASE_COLOR","SHUFFLE_BASE_COLOR","SHUFFLE_SECONDARY_BASE_COLOR","REDO_BASE_COLOR","min","REDO_SECONDARY_BASE_COLOR","UNDO_BASE_COLOR","max","UNDO_SECONDARY_BASE_COLOR","reducers","combineReducers","store","createStore","middleware","App","Root","basename","CssBaseline","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.8d838f84.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { MaterialDialog, MaterialIcon, MaterialIconButton } from './material';\nimport './AboutDialog.css';\n\nconst AboutDialog = () => {\n  const [infoDialogOpen, setInfoDialogOpen] = useState(false);\n  return (\n    <div className=\"about-dialog-container\">\n      <MaterialIconButton\n        aria-label=\"About\"\n        className=\"info-button\"\n        color=\"inherit\"\n        onClick={() => {\n          setInfoDialogOpen(true);\n        }}\n      >\n        <MaterialIcon>info_outline</MaterialIcon>\n      </MaterialIconButton>\n      <MaterialDialog\n        open={infoDialogOpen}\n        onClose={() => {\n          setInfoDialogOpen(false);\n        }}\n      >\n        <div className=\"about-dialog\">\n          <MaterialIconButton\n            aria-label=\"Close\"\n            className=\"close-button\"\n            color=\"inherit\"\n            onClick={() => {\n              setInfoDialogOpen(false);\n            }}\n          >\n            <MaterialIcon>close</MaterialIcon>\n          </MaterialIconButton>\n          <div className=\"typography-credits-title\">About</div>\n          <div className=\"typography-credits\">\n            <p>\n              Colorly is a versatile collection of color tools for designers and\n              developers. The chosen tool can be selected from the dropdown menu\n              attached to the page title. Valid input formats:\n            </p>\n            <ul>\n              <li>#RGB, #RRGGBB</li>\n              <li>rgb(red,green,blue)</li>\n              <li>\n                <a\n                  href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  CSS Color Values\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"typography-credits-title\">Credits</div>\n          <ul className=\"typography-credits\">\n            <li>\n              Created by{' '}\n              <a\n                href=\"https://github.com/adamgraham\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                @adamgraham\n              </a>\n            </li>\n            <li>\n              Built with React JS by\n              <a\n                href=\"https://github.com/facebook\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                @Facebook\n              </a>\n            </li>\n            <li>\n              Material Design Components &amp; Icons by{' '}\n              <a\n                href=\"https://github.com/google\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                @Google\n              </a>\n            </li>\n            <li>\n              Design inspired from Shadowlord by{' '}\n              <a\n                href=\"https://github.com/noeldelgado\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                @noeldelgado\n              </a>\n            </li>\n          </ul>\n        </div>\n      </MaterialDialog>\n    </div>\n  );\n};\n\nexport default AboutDialog;\n","export const enterKeyHandler = (callback = () => {}) => (event) => {\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  let handled = false;\n  if (event.key === 'Enter') {\n    handled = true;\n    callback(event);\n  }\n\n  if (handled) {\n    event.preventDefault();\n  }\n};\n\nexport const clearSelection = () => {\n  if (document.selection && document.selection.empty) {\n    document.selection.empty();\n  } else if (window.getSelection) {\n    const selection = window.getSelection();\n    selection.removeAllRanges();\n  }\n};\n\nexport const getSelection = () => {\n  if (document.selection) {\n    return document.selection;\n  } else if (window.getSelection) {\n    return window.getSelection();\n  } else {\n    return null;\n  }\n};\n\nexport const copyToClipboard = (str) => {\n  const element = document.createElement('textarea');\n  element.value = str;\n  element.setAttribute('readonly', '');\n  element.style.position = 'absolute';\n  element.style.left = '-9999px';\n  document.body.appendChild(element);\n  element.select();\n  document.execCommand('copy');\n  document.body.removeChild(element);\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport Color from 'color';\nimport {\n  MaterialIcon,\n  MaterialIconButton,\n  MaterialInput,\n} from '../components/material';\nimport { enterKeyHandler } from '../utils/eventHandlers';\nimport './ColorPicker.css';\n\nconst ColorPicker = React.forwardRef(\n  (\n    {\n      className,\n      id = 'color-picker',\n      alignment = 'left',\n      allowRedo = true,\n      allowUndo = true,\n      onColorChange = () => {},\n      onShuffleClick = () => {},\n      onUndoClick = () => {},\n      onRedoClick = () => {},\n      value,\n    },\n    ref\n  ) => {\n    const [color, setColor] = useState({ input: '#000000', picker: '#000000' });\n    const [hasError, setHasError] = useState(false);\n\n    useEffect(() => {\n      if (value && color.picker !== value) {\n        setColor({ input: value, picker: value });\n      }\n    }, [color, onColorChange, value]);\n\n    const pickColor = useMemo(\n      () =>\n        debounce((pickedColor) => {\n          if (pickedColor) {\n            onColorChange(pickedColor.toLowerCase());\n          }\n        }, 100),\n      [onColorChange]\n    );\n\n    const buttons = [\n      <MaterialIconButton\n        aria-label=\"Undo\"\n        key=\"undo-button\"\n        className=\"undo-button\"\n        color=\"inherit\"\n        disabled={!allowUndo}\n        onClick={onUndoClick}\n      >\n        <MaterialIcon>undo</MaterialIcon>\n      </MaterialIconButton>,\n      <MaterialIconButton\n        aria-label=\"Redo\"\n        key=\"redo-button\"\n        className=\"redo-button\"\n        color=\"inherit\"\n        disabled={!allowRedo}\n        onClick={onRedoClick}\n      >\n        <MaterialIcon>redo</MaterialIcon>\n      </MaterialIconButton>,\n    ];\n\n    if (alignment === 'right') {\n      buttons.reverse();\n    }\n\n    return (\n      <div\n        className={classNames(\n          'color-picker',\n          { [`color-picker--${alignment}-aligned`]: alignment },\n          className\n        )}\n      >\n        <div className=\"color-picker__selector\">\n          <input\n            id={id}\n            onChange={(event) => {\n              pickColor(event.target.value);\n            }}\n            ref={ref}\n            type=\"color\"\n            value={color.picker}\n          />\n          <div\n            className=\"color-picker__preview\"\n            style={{ backgroundColor: color.picker }}\n          />\n        </div>\n        <MaterialInput\n          className={classNames('color-picker__input', 'typography-input', {\n            'margin-left-lg': alignment === 'left',\n            'margin-right-md': alignment === 'left',\n            'margin-right-lg': alignment === 'right',\n            'margin-left-md': alignment === 'right',\n          })}\n          error={hasError}\n          onChange={(event) => {\n            setColor({ ...color, input: event.target.value });\n          }}\n          onKeyDown={enterKeyHandler((event) => {\n            try {\n              // eslint-disable-next-line no-new\n              new Color(event.target.value.toLowerCase());\n              event.target.blur();\n            } catch {\n              setHasError(true);\n            }\n          })}\n          onBlur={(event) => {\n            try {\n              const inputColor = new Color(event.target.value.toLowerCase());\n              onColorChange(inputColor.hex().toLowerCase());\n            } catch {\n              setColor({ ...color, input: value });\n            }\n            setHasError(false);\n          }}\n          value={color.input}\n        />\n        <MaterialIconButton\n          aria-label=\"Randomize\"\n          className=\"shuffle-button\"\n          color=\"inherit\"\n          onClick={onShuffleClick}\n        >\n          <MaterialIcon>shuffle</MaterialIcon>\n        </MaterialIconButton>\n        {buttons}\n      </div>\n    );\n  }\n);\n\nColorPicker.displayName = 'ColorPicker';\nColorPicker.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  alignment: PropTypes.oneOf(['left', 'right']),\n  allowRedo: PropTypes.bool,\n  allowUndo: PropTypes.bool,\n  onColorChange: PropTypes.func,\n  onShuffleClick: PropTypes.func,\n  onUndoClick: PropTypes.func,\n  onRedoClick: PropTypes.func,\n  showLabel: PropTypes.bool,\n  value: PropTypes.string,\n};\n\nexport default ColorPicker;\n","export const setSelectedHarmony = (harmony) => ({\n  type: 'SET_SELECTED_HARMONY',\n  harmony,\n});\n\nexport const setSelectedColorBlindness = (colorBlindness) => ({\n  type: 'SET_SELECTED_COLOR_BLINDNESS',\n  colorBlindness,\n});\n\nexport const setBaseColor = (color) => ({\n  type: 'SET_BASE_COLOR',\n  color,\n});\n\nexport const setSecondaryBaseColor = (color) => ({\n  type: 'SET_SECONDARY_BASE_COLOR',\n  color,\n});\n\nexport const shuffleBaseColor = () => ({\n  type: 'SHUFFLE_BASE_COLOR',\n});\n\nexport const shuffleSecondaryBaseColor = () => ({\n  type: 'SHUFFLE_SECONDARY_BASE_COLOR',\n});\n\nexport const redoBaseColor = () => ({\n  type: 'REDO_BASE_COLOR',\n});\n\nexport const redoSecondaryBaseColor = () => ({\n  type: 'REDO_SECONDARY_BASE_COLOR',\n});\n\nexport const undoBaseColor = () => ({\n  type: 'UNDO_BASE_COLOR',\n});\n\nexport const undoSecondaryBaseColor = () => ({\n  type: 'UNDO_SECONDARY_BASE_COLOR',\n});\n","export const getBaseColor = (state) =>\n  state.color.baseColors[state.color.baseColorIndex];\nexport const getBaseColors = (state) => state.color.baseColors;\nexport const getSecondaryBaseColor = (state) =>\n  state.color.secondaryBaseColors[state.color.secondaryBaseColorIndex];\nexport const getSecondaryBaseColors = (state) =>\n  state.color.secondaryBaseColors;\n\nexport const getSelectedHarmony = (state) => state.color.selectedHarmony;\nexport const getSelectedColorBlindness = (state) =>\n  state.color.selectedColorBlindness;\n\nexport const canUndoBaseColor = (state) => state.color.baseColorIndex > 0;\nexport const canUndoSecondaryBaseColor = (state) =>\n  state.color.secondaryBaseColorIndex > 0;\n\nexport const canRedoBaseColor = (state) =>\n  state.color.baseColorIndex < state.color.baseColors.length - 1;\nexport const canRedoSecondaryBaseColor = (state) =>\n  state.color.secondaryBaseColorIndex <\n  state.color.secondaryBaseColors.length - 1;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useBaseColor, useSecondaryBaseColor } from './hooks';\nimport { setBaseColor, setSecondaryBaseColor } from '../actions';\n\nexport function withBaseColor(WrappedComponent) {\n  const WithBaseColor = (props) => {\n    const dispatch = useDispatch();\n    const baseColor = useBaseColor();\n    const secondaryBaseColor = useSecondaryBaseColor();\n    return (\n      <WrappedComponent\n        {...props}\n        baseColor={baseColor}\n        secondaryBaseColor={secondaryBaseColor}\n        setBaseColor={(color) => {\n          dispatch(setBaseColor(color));\n        }}\n        setSecondaryBaseColor={(color) => {\n          dispatch(setSecondaryBaseColor(color));\n        }}\n      />\n    );\n  };\n  WithBaseColor.displayName = `WithBaseColor(${\n    WrappedComponent.displayName || WrappedComponent.name || 'Component'\n  })`;\n  return WithBaseColor;\n}\n","import { useSelector } from 'react-redux';\nimport { getBaseColor, getSecondaryBaseColor } from '../selectors';\n\nexport const useBaseColor = () => {\n  return useSelector(getBaseColor);\n};\n\nexport const useSecondaryBaseColor = () => {\n  return useSelector(getSecondaryBaseColor);\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Color from 'color';\nimport blinder from 'color-blind';\nimport { setSelectedColorBlindness } from '../actions';\nimport { ColorGroup, ColorPalette, PageHeader } from '../components';\nimport {\n  MaterialButton,\n  MaterialIcon,\n  MaterialMenu,\n  MaterialMenuItem,\n} from '../components/material';\nimport { getSelectedColorBlindness } from '../selectors';\nimport { withBaseColor } from '../utils/hoc';\n\nconst routes = {\n  protanopia: {\n    path: '/color-blindness/protanopia',\n    name: 'Protanopia',\n    blinder: 'protanopia',\n  },\n  protanomaly: {\n    path: '/color-blindness/protanomaly',\n    name: 'Protanomaly',\n    blinder: 'protanomaly',\n  },\n  deuteranopia: {\n    path: '/color-blindness/deuteranopia',\n    name: 'Deuteranopia',\n    blinder: 'deuteranopia',\n  },\n  deuteranomaly: {\n    path: '/color-blindness/deuteranomaly',\n    name: 'Deuteranomaly',\n    blinder: 'deuteranomaly',\n  },\n  tritanopia: {\n    path: '/color-blindness/tritanopia',\n    name: 'Tritanopia',\n    blinder: 'tritanopia',\n  },\n  tritanomaly: {\n    path: '/color-blindness/tritanomaly',\n    name: 'Tritanomaly',\n    blinder: 'tritanomaly',\n  },\n  achromatopsia: {\n    path: '/color-blindness/achromatopsia',\n    name: 'Achromatopsia',\n    blinder: 'achromatopsia',\n  },\n  achromatomaly: {\n    path: '/color-blindness/achromatomaly',\n    name: 'Achromatomaly',\n    blinder: 'achromatomaly',\n  },\n};\n\nconst ColorBlindness = ({ baseColor, setBaseColor, history }) => {\n  const color = new Color(baseColor);\n  const dispatch = useDispatch();\n  const selectedColorBlindness = useSelector(getSelectedColorBlindness);\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const matchedRoute = Object.values(routes).find((route) => {\n    return history.location.pathname.includes(route.path);\n  });\n\n  useEffect(() => {\n    if (!matchedRoute) {\n      history.push(selectedColorBlindness?.path ?? routes.protanopia.path);\n    }\n  }, [history, selectedColorBlindness, matchedRoute]);\n\n  const openMenu = (event) => {\n    setMenuAnchor(event.currentTarget);\n  };\n\n  const closeMenu = () => {\n    setMenuAnchor(null);\n  };\n\n  return (\n    <article className=\"page color-blindness\">\n      <PageHeader layout=\"center\">\n        <MaterialButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={openMenu}\n          startIcon={\n            <MaterialIcon>\n              {menuAnchor ? 'expand_less' : 'expand_more'}\n            </MaterialIcon>\n          }\n        >\n          <b className=\"page-header__title typography-page-title\">\n            {(matchedRoute && matchedRoute.name) || 'Select a color blindness'}\n          </b>\n        </MaterialButton>\n        <MaterialMenu\n          id=\"color-blindness-select\"\n          className=\"margin-top-xxxl\"\n          anchorEl={menuAnchor}\n          keepMounted\n          open={Boolean(menuAnchor)}\n          onClose={closeMenu}\n        >\n          {Object.values(routes).map((route) => (\n            <MaterialMenuItem\n              key={route.path}\n              onClick={() => {\n                closeMenu();\n                dispatch(setSelectedColorBlindness(route));\n                history.push(route.path);\n              }}\n            >\n              <span className=\"typography-menu\">{route.name}</span>\n            </MaterialMenuItem>\n          ))}\n        </MaterialMenu>\n      </PageHeader>\n      <Switch>\n        {Object.values(routes).map((route) => (\n          <Route key={route.path} path={route.path}>\n            <ColorGroup layout=\"column\">\n              <ColorPalette\n                baseColor={color}\n                length={9}\n                type=\"tintsAndShades\"\n                onSelectColor={setBaseColor}\n              />\n              <ColorPalette\n                baseColor={blinder[route.blinder](color.hex())}\n                length={9}\n                type=\"tintsAndShades\"\n                onSelectColor={setBaseColor}\n              />\n            </ColorGroup>\n          </Route>\n        ))}\n      </Switch>\n    </article>\n  );\n};\n\nColorBlindness.propTypes = {\n  baseColor: PropTypes.string,\n  setBaseColor: PropTypes.func,\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n    push: PropTypes.func,\n  }),\n};\n\nexport default withBaseColor(withRouter(ColorBlindness));\n","import React from 'react';\n\nexport const formatRGB = (color) => {\n  const red = Math.round(color.red());\n  const green = Math.round(color.green());\n  const blue = Math.round(color.blue());\n  return `RGB: ${red} ${green} ${blue}`;\n};\n\nexport const formatCMYK = (color) => {\n  const cyan = Math.round(color.cyan());\n  const magenta = Math.round(color.magenta());\n  const yellow = Math.round(color.yellow());\n  const black = Math.round(color.black());\n  return `CMYK: ${cyan}/${magenta}/${yellow}/${black}`;\n};\n\nexport const formatHSL = (color) => {\n  const hue = Math.round(color.hue());\n  const saturation = Math.round(color.saturationl());\n  const lightness = Math.round(color.lightness());\n  return `HSL: ${hue}° ${saturation}% ${lightness}%`;\n};\n\nexport const formatHSV = (color) => {\n  const hue = Math.round(color.hue());\n  const saturation = Math.round(color.saturationv());\n  const lightness = Math.round(color.lightness());\n  return `HSV: ${hue}° ${saturation}% ${lightness}%`;\n};\n\nexport const formatLuminance = (color) => {\n  const luminance = color.luminosity();\n  return (\n    <React.Fragment>\n      <span className=\"typography-number-label margin-left-md\">Luminance </span>\n      <span className=\"typography-number\">\n        {Math.round((luminance + Number.EPSILON) * 10000) / 10000}\n      </span>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Color from 'color';\nimport { ColorCard, ColorGroup, PageHeader } from '../components';\nimport { MaterialChip, MaterialTooltip } from '../components/material';\nimport { formatLuminance } from '../utils/format';\nimport { withBaseColor } from '../utils/hoc';\nimport './ContrastRatio.css';\n\nconst renderLoremIpsum = (color) => (\n  <div className=\"lorem-ipsum\" style={{ color }}>\n    <p style={{ fontSize: '12pt' }}>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis nec magna\n      ornare mi sagittis viverra. Praesent luctus, purus pharetra vulputate\n      interdum, lectus metus interdum velit, tincidunt scelerisque mauris dolor\n      efficitur justo. Vivamus at orci ac sapien varius tristique. Vivamus\n      dictum diam quis neque aliquam auctor. Nam quis consectetur erat. Aenean\n      varius velit rhoncus eros bibendum, id pharetra metus ultrices.\n      Pellentesque dapibus diam et dolor fringilla lacinia. Nunc vulputate\n      suscipit congue.\n    </p>\n    <p style={{ fontSize: '14pt' }}>\n      <b>\n        Duis auctor cursus odio vel sollicitudin. Nunc vitae tempor nibh.\n        Aliquam venenatis venenatis fermentum. Nullam et purus egestas, lacinia\n        lorem eu, eleifend massa. Vestibulum vitae eros ac leo tempus\n        vestibulum. Vestibulum efficitur, lorem in feugiat efficitur, neque odio\n        maximus nibh, ac varius risus ligula eget purus. Cras iaculis neque\n        tincidunt diam euismod finibus. Sed sollicitudin quam purus, quis\n        consectetur nunc efficitur ac.\n      </b>\n    </p>\n    <p style={{ fontSize: '18pt' }}>\n      Suspendisse eget feugiat enim. Ut pellentesque condimentum purus non\n      ullamcorper. Curabitur vehicula magna odio, at molestie nibh lacinia ac.\n      Suspendisse potenti. Aenean sit amet sodales mi, vel aliquet sapien. Donec\n      elementum sagittis augue eget tempus. Nam ultricies felis odio. Nullam\n      sapien quam, porta id lacus ac, ullamcorper varius lacus.\n    </p>\n  </div>\n);\n\nconst ContrastRatio = ({ baseColor, secondaryBaseColor }) => {\n  const _baseColor = new Color(baseColor);\n  const _secondaryColor = new Color(secondaryBaseColor);\n  const contrast = _baseColor.contrast(_secondaryColor);\n  const level = _baseColor.level(_secondaryColor);\n  return (\n    <article className=\"page contrast-ratio\">\n      <ColorGroup layout=\"column\">\n        <PageHeader layout=\"space-between\">\n          <span className=\"text-align-left margin-left-xxxl\">\n            {formatLuminance(_baseColor)}\n          </span>\n          <MaterialTooltip\n            title={\n              level !== ''\n                ? `Meets WCAG 2.1 ${level} Compliance`\n                : 'Fails WCAG 2.1 Compliance'\n            }\n          >\n            <span\n              className={classNames(\n                'contrast-ratio__contrast',\n                'text-align-center',\n                {\n                  [level !== '' ? level : 'fails']: true,\n                }\n              )}\n            >\n              <span className=\"contrast-ratio__ratio\">\n                {contrast.toFixed(2)}\n              </span>\n              <MaterialChip\n                className=\"margin-left-md\"\n                color={level !== '' ? 'primary' : 'secondary'}\n                label={level !== '' ? <b>{level}</b> : <b>Fails</b>}\n                clickable\n                component=\"a\"\n                href={\n                  level === 'AAA'\n                    ? 'https://www.w3.org/TR/WCAG21/#contrast-enhanced'\n                    : 'https://www.w3.org/TR/WCAG21/#contrast-minimum'\n                }\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              />\n            </span>\n          </MaterialTooltip>\n          <span className=\"text-align-right margin-right-xxxl\">\n            {formatLuminance(_secondaryColor)}\n          </span>\n        </PageHeader>\n        <ColorGroup layout=\"row\">\n          <ColorCard\n            color={baseColor}\n            copyable={false}\n            position=\"top-left\"\n            properties={[]}\n            hideProperties\n            text=\"large\"\n          >\n            {renderLoremIpsum(secondaryBaseColor)}\n          </ColorCard>\n          <ColorCard\n            color={secondaryBaseColor}\n            copyable={false}\n            position=\"top-right\"\n            properties={[]}\n            hideProperties\n            text=\"large\"\n          >\n            {renderLoremIpsum(baseColor)}\n          </ColorCard>\n        </ColorGroup>\n      </ColorGroup>\n    </article>\n  );\n};\n\nContrastRatio.propTypes = {\n  baseColor: PropTypes.string,\n  secondaryBaseColor: PropTypes.string,\n};\n\nexport default withBaseColor(ContrastRatio);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { shuffleSecondaryBaseColor } from '../actions';\nimport { getSecondaryBaseColors } from '../selectors';\nimport { withBaseColor } from '../utils/hoc';\nimport './GradientPreview.css';\n\nconst GradientPreview = ({ baseColor, secondaryBaseColor }) => {\n  const dispatch = useDispatch();\n  const secondaryColors = useSelector(getSecondaryBaseColors);\n\n  // If the secondary color has never been changed throughout the app session,\n  // then shuffle it once to make the gradient more interesting to start.\n  useEffect(() => {\n    if (secondaryColors.length === 1 && secondaryColors[0] === '#000000') {\n      dispatch(shuffleSecondaryBaseColor());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <article className=\"page gradient-preview\">\n      <div\n        className=\"gradient-card\"\n        style={{\n          background: `linear-gradient(90deg, ${baseColor} 0%, ${secondaryBaseColor} 100%)`,\n        }}\n      />\n    </article>\n  );\n};\n\nGradientPreview.propTypes = {\n  baseColor: PropTypes.string,\n  secondaryBaseColor: PropTypes.string,\n};\n\nexport default withBaseColor(GradientPreview);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Color from 'color';\nimport { setSelectedHarmony } from '../actions';\nimport { ColorGroup, ColorPalette, PageHeader } from '../components';\nimport {\n  MaterialButton,\n  MaterialIcon,\n  MaterialMenu,\n  MaterialMenuItem,\n} from '../components/material';\nimport { getSelectedHarmony } from '../selectors';\nimport { withBaseColor } from '../utils/hoc';\n\nconst routes = {\n  analogous: {\n    path: '/harmonies/analogous',\n    name: 'Analogous',\n    hues: [-30, 0, 30],\n  },\n  monochromatic: {\n    path: '/harmonies/monochromatic',\n    name: 'Monochromatic',\n    hues: [0],\n  },\n  complement: {\n    path: '/harmonies/complement',\n    name: 'Complement',\n    hues: [0, 180],\n  },\n  splitComplement: {\n    path: '/harmonies/split-complement',\n    name: 'Split Complement',\n    hues: [0, 150, 210],\n  },\n  doubleComplement: {\n    path: '/harmonies/double-complement',\n    name: 'Double Complement',\n    hues: [-30, 150, 30, 210],\n  },\n  triadic: {\n    path: '/harmonies/triadic',\n    name: 'Triadic (120°)',\n    hues: [0, 120, 240],\n  },\n  tetradic: {\n    path: '/harmonies/tetradic',\n    name: 'Tetradic (90°)',\n    hues: [0, 90, 180, 270],\n  },\n};\n\nconst Harmonies = ({ baseColor, setBaseColor, history }) => {\n  const color = new Color(baseColor);\n  const dispatch = useDispatch();\n  const selectedHarmony = useSelector(getSelectedHarmony);\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const matchedRoute = Object.values(routes).find((route) => {\n    return history.location.pathname.includes(route.path);\n  });\n\n  useEffect(() => {\n    if (!matchedRoute) {\n      history.push(selectedHarmony?.path ?? routes.analogous.path);\n    }\n  }, [history, selectedHarmony, matchedRoute]);\n\n  const openMenu = (event) => {\n    setMenuAnchor(event.currentTarget);\n  };\n\n  const closeMenu = () => {\n    setMenuAnchor(null);\n  };\n\n  return (\n    <article className=\"page harmonies\">\n      <PageHeader layout=\"center\">\n        <MaterialButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={openMenu}\n          startIcon={\n            <MaterialIcon>\n              {menuAnchor ? 'expand_less' : 'expand_more'}\n            </MaterialIcon>\n          }\n        >\n          <b className=\"page-header__title typography-page-title\">\n            {(matchedRoute && matchedRoute.name) || 'Select a harmony'}\n          </b>\n        </MaterialButton>\n        <MaterialMenu\n          id=\"harmony-select\"\n          className=\"margin-top-xxxl\"\n          anchorEl={menuAnchor}\n          keepMounted\n          open={Boolean(menuAnchor)}\n          onClose={closeMenu}\n        >\n          {Object.values(routes).map((route) => (\n            <MaterialMenuItem\n              key={route.path}\n              onClick={() => {\n                closeMenu();\n                dispatch(setSelectedHarmony(route));\n                history.push(route.path);\n              }}\n            >\n              <span className=\"typography-menu\">{route.name}</span>\n            </MaterialMenuItem>\n          ))}\n        </MaterialMenu>\n      </PageHeader>\n      <Switch>\n        {Object.values(routes).map((route) => (\n          <Route key={route.path} path={route.path}>\n            <ColorGroup layout=\"column\">\n              {route.hues.map((hue) => (\n                <ColorPalette\n                  key={hue}\n                  baseColor={hue === 0 ? color : color.rotate(hue)}\n                  length={9}\n                  type=\"tintsAndShades\"\n                  onSelectColor={setBaseColor}\n                />\n              ))}\n            </ColorGroup>\n          </Route>\n        ))}\n      </Switch>\n    </article>\n  );\n};\n\nHarmonies.propTypes = {\n  baseColor: PropTypes.string,\n  setBaseColor: PropTypes.func,\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n    push: PropTypes.func,\n  }),\n};\n\nexport default withBaseColor(withRouter(Harmonies));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Color from 'color';\nimport { ColorCard, ColorGroup, ColorPalette } from '../components';\nimport { withBaseColor } from '../utils/hoc';\n\nconst Hues = ({ baseColor, setBaseColor }) => {\n  const color = new Color(baseColor);\n  return (\n    <article className=\"page lightness\">\n      <ColorGroup layout=\"row\">\n        <ColorCard\n          color={baseColor}\n          onSelectColor={setBaseColor}\n          size=\"large\"\n        />\n        <ColorGroup layout=\"column\">\n          <ColorPalette\n            baseColor={baseColor}\n            onSelectColor={setBaseColor}\n            increment={15 / 360}\n            length={8}\n            type=\"hues\"\n          />\n          <ColorPalette\n            baseColor={color.rotate(120)}\n            onSelectColor={setBaseColor}\n            increment={15 / 360}\n            length={8}\n            type=\"hues\"\n          />\n          <ColorPalette\n            baseColor={color.rotate(240)}\n            onSelectColor={setBaseColor}\n            increment={15 / 360}\n            length={8}\n            type=\"hues\"\n          />\n        </ColorGroup>\n      </ColorGroup>\n    </article>\n  );\n};\n\nHues.propTypes = {\n  baseColor: PropTypes.string,\n  setBaseColor: PropTypes.func,\n};\n\nexport default withBaseColor(Hues);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ColorCard, ColorGroup, ColorPalette } from '../components';\nimport { withBaseColor } from '../utils/hoc';\n\nconst Lightness = ({ baseColor, setBaseColor }) => (\n  <article className=\"page lightness\">\n    <ColorGroup layout=\"row\">\n      <ColorCard color={baseColor} onSelectColor={setBaseColor} size=\"large\" />\n      <ColorGroup layout=\"column\">\n        <ColorPalette\n          baseColor={baseColor}\n          onSelectColor={setBaseColor}\n          type=\"lighten\"\n        />\n        <ColorPalette\n          baseColor={baseColor}\n          onSelectColor={setBaseColor}\n          type=\"darken\"\n        />\n      </ColorGroup>\n    </ColorGroup>\n  </article>\n);\n\nLightness.propTypes = {\n  baseColor: PropTypes.string,\n  setBaseColor: PropTypes.func,\n};\n\nexport default withBaseColor(Lightness);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ColorCard, ColorGroup, ColorPalette } from '../components';\nimport { withBaseColor } from '../utils/hoc';\n\nconst Saturation = ({ baseColor, setBaseColor }) => (\n  <article className=\"page saturation\">\n    <ColorGroup layout=\"row\">\n      <ColorCard color={baseColor} onSelectColor={setBaseColor} size=\"large\" />\n      <ColorGroup layout=\"column\">\n        <ColorPalette\n          baseColor={baseColor}\n          onSelectColor={setBaseColor}\n          type=\"saturated\"\n        />\n        <ColorPalette\n          baseColor={baseColor}\n          onSelectColor={setBaseColor}\n          type=\"desaturated\"\n        />\n      </ColorGroup>\n    </ColorGroup>\n  </article>\n);\n\nSaturation.propTypes = {\n  baseColor: PropTypes.string,\n  setBaseColor: PropTypes.func,\n};\n\nexport default withBaseColor(Saturation);\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport { setBaseColor } from './actions';\nimport {\n  ColorBlindness,\n  ContrastRatio,\n  GradientPreview,\n  Harmonies,\n  Hues,\n  Lightness,\n  Saturation,\n  TintsAndShades,\n} from './pages';\n\nexport const routes = {\n  tintsAndShades: {\n    path: '/tints-and-shades',\n    name: 'Tints & Shades',\n    component: TintsAndShades,\n    exact: true,\n  },\n  lightness: {\n    path: '/lightness',\n    name: 'Lightness',\n    component: Lightness,\n  },\n  saturation: {\n    path: '/saturation',\n    name: 'Saturation',\n    component: Saturation,\n  },\n  harmonies: {\n    path: '/harmonies',\n    name: 'Harmonies',\n    component: Harmonies,\n    useSubheader: true,\n  },\n  hues: {\n    path: '/hues',\n    name: 'Color Hues',\n    component: Hues,\n  },\n  colorBlindness: {\n    path: '/color-blindness',\n    name: 'Color Blindness',\n    component: ColorBlindness,\n    useSubheader: true,\n  },\n  contrastRatio: {\n    path: '/contrast',\n    name: 'Contrast Ratio',\n    component: ContrastRatio,\n    useSubheader: true,\n    useSecondaryColor: true,\n  },\n  gradientPreview: {\n    path: '/gradient',\n    name: 'Gradient Preview',\n    component: GradientPreview,\n    useSubheader: false,\n    useSecondaryColor: true,\n  },\n};\n\nconst Routes = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n\n    // Colors written with the standard #000000 format\n    // are unable to be parsed from the query parameters\n    // since the '#' treats it as a hash url. We can\n    // circumvent this problem by using the url hash as the\n    // color if the query is present but no value is found.\n    let color = params.get('color');\n    if (color === '' && location.hash) {\n      color = location.hash;\n    }\n\n    if (color) {\n      dispatch(setBaseColor(color));\n    }\n  }, [dispatch, location]);\n\n  return (\n    <Switch>\n      {Object.values(routes).map((route) => {\n        const Page = route.component;\n        return (\n          <Route\n            key={route.path}\n            path={route.path}\n            exact={Boolean(route.exact)}\n          >\n            <Page />\n          </Route>\n        );\n      })}\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ColorCard, ColorGroup, ColorPalette } from '../components';\nimport { withBaseColor } from '../utils/hoc';\n\nconst TintsAndShades = ({ baseColor, setBaseColor }) => (\n  <article className=\"page tints-and-shades\">\n    <ColorGroup layout=\"row\">\n      <ColorCard color={baseColor} onSelectColor={setBaseColor} size=\"large\" />\n      <ColorGroup layout=\"column\">\n        <ColorPalette\n          baseColor={baseColor}\n          onSelectColor={setBaseColor}\n          type=\"tints\"\n        />\n        <ColorPalette\n          baseColor={baseColor}\n          onSelectColor={setBaseColor}\n          type=\"shades\"\n        />\n        <ColorPalette\n          baseColor={baseColor}\n          onSelectColor={setBaseColor}\n          type=\"tones\"\n        />\n      </ColorGroup>\n    </ColorGroup>\n  </article>\n);\n\nTintsAndShades.propTypes = {\n  baseColor: PropTypes.string,\n  setBaseColor: PropTypes.func,\n};\n\nexport default withBaseColor(TintsAndShades);\n","import Color from 'color';\n\nexport const black = new Color('black');\nexport const white = new Color('white');\nexport const gray = new Color('gray');\n\nexport const red = new Color('red');\nexport const green = new Color('green');\nexport const blue = new Color('blue');\n\nexport const cyan = new Color('cyan');\nexport const magenta = new Color('magenta');\nexport const yellow = new Color('yellow');\n\nexport const randomColor = () =>\n  new Color(\n    {\n      r: Math.random() * 255,\n      g: Math.random() * 255,\n      b: Math.random() * 255,\n    },\n    'rgb'\n  );\n\nexport const randomColorHex = () => randomColor().hex().toLowerCase();\n\nexport const isValidColor = (strColor) => {\n  const s = new Option().style;\n  s.color = strColor;\n  return s.color !== '';\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {\n  MaterialButton,\n  MaterialIcon,\n  MaterialMenu,\n  MaterialMenuItem,\n} from './material';\nimport AboutDialog from './AboutDialog';\nimport ColorPicker from './ColorPicker';\nimport {\n  redoBaseColor,\n  redoSecondaryBaseColor,\n  shuffleBaseColor,\n  shuffleSecondaryBaseColor,\n  undoBaseColor,\n  undoSecondaryBaseColor,\n} from '../actions';\nimport { routes } from '../routes';\nimport {\n  canRedoBaseColor,\n  canRedoSecondaryBaseColor,\n  canUndoBaseColor,\n  canUndoSecondaryBaseColor,\n} from '../selectors';\nimport { isValidColor } from '../utils/colors';\nimport { withBaseColor } from '../utils/hoc';\nimport './AppHeader.css';\n\nconst AppHeader = ({\n  baseColor,\n  secondaryBaseColor,\n  setBaseColor,\n  setSecondaryBaseColor,\n  history,\n}) => {\n  const dispatch = useDispatch();\n  const _canRedoBaseColor = useSelector(canRedoBaseColor);\n  const _canRedoSecondaryBaseColor = useSelector(canRedoSecondaryBaseColor);\n  const _canUndoBaseColor = useSelector(canUndoBaseColor);\n  const _canUndoSecondaryBaseColor = useSelector(canUndoSecondaryBaseColor);\n\n  const [pageMenuAnchor, setPageMenuAnchor] = useState(null);\n  const matchedRoute = Object.values(routes).find((route) => {\n    if (route.exact) {\n      return history.location.pathname === route.path;\n    } else {\n      return history.location.pathname.includes(route.path);\n    }\n  });\n\n  useEffect(() => {\n    if (!matchedRoute) {\n      history.push(routes.tintsAndShades.path);\n    }\n  }, [matchedRoute, history]);\n\n  useEffect(() => {\n    document.addEventListener('paste', (event) => {\n      const paste = (event.clipboardData || window.clipboardData).getData(\n        'text'\n      );\n      if (isValidColor(paste)) {\n        setBaseColor(paste);\n      }\n    });\n  }, [setBaseColor]);\n\n  const openPageMenu = (event) => {\n    setPageMenuAnchor(event.currentTarget);\n  };\n\n  const closePageMenu = () => {\n    setPageMenuAnchor(null);\n  };\n\n  return (\n    <header\n      className={classNames('app-header', {\n        'app-header--no-shadow': Boolean(\n          matchedRoute && matchedRoute.useSubheader\n        ),\n      })}\n    >\n      <ColorPicker\n        id=\"color-picker-primary\"\n        alignment=\"left\"\n        allowRedo={_canRedoBaseColor}\n        allowUndo={_canUndoBaseColor}\n        onColorChange={setBaseColor}\n        onShuffleClick={() => dispatch(shuffleBaseColor())}\n        onUndoClick={() => dispatch(undoBaseColor())}\n        onRedoClick={() => dispatch(redoBaseColor())}\n        value={baseColor}\n      />\n      <div className=\"flex justify-content-center align-items-center\">\n        <MaterialButton\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={openPageMenu}\n          startIcon={<MaterialIcon>menu</MaterialIcon>}\n        >\n          <b className=\"app-header__title typography-app-title\">\n            {(matchedRoute && matchedRoute.name) || 'Color Tools'}\n          </b>\n        </MaterialButton>\n        <MaterialMenu\n          id=\"page-select\"\n          className=\"margin-top-xxxl\"\n          anchorEl={pageMenuAnchor}\n          keepMounted\n          open={Boolean(pageMenuAnchor)}\n          onClose={closePageMenu}\n        >\n          {Object.values(routes).map((route) => (\n            <MaterialMenuItem\n              key={route.path}\n              onClick={() => {\n                closePageMenu();\n                history.push(route.path);\n              }}\n            >\n              <span className=\"typography-menu\">{route.name}</span>\n            </MaterialMenuItem>\n          ))}\n        </MaterialMenu>\n      </div>\n      {matchedRoute && matchedRoute.useSecondaryColor ? (\n        <ColorPicker\n          id=\"color-picker-secondary\"\n          alignment=\"right\"\n          allowRedo={_canRedoSecondaryBaseColor}\n          allowUndo={_canUndoSecondaryBaseColor}\n          onColorChange={setSecondaryBaseColor}\n          onShuffleClick={() => dispatch(shuffleSecondaryBaseColor())}\n          onUndoClick={() => dispatch(undoSecondaryBaseColor())}\n          onRedoClick={() => dispatch(redoSecondaryBaseColor())}\n          value={secondaryBaseColor}\n        />\n      ) : (\n        <AboutDialog />\n      )}\n    </header>\n  );\n};\n\nAppHeader.propTypes = {\n  baseColor: PropTypes.string,\n  secondaryBaseColor: PropTypes.string,\n  setBaseColor: PropTypes.func,\n  setSecondaryBaseColor: PropTypes.func,\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n    push: PropTypes.func,\n  }),\n};\n\nexport default withBaseColor(withRouter(AppHeader));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Color from 'color';\nimport { MaterialIcon, MaterialIconButton } from '../components/material';\nimport { white, black } from '../utils/colors';\nimport { enterKeyHandler } from '../utils/eventHandlers';\nimport {\n  formatCMYK,\n  formatHSL,\n  formatHSV,\n  formatLuminance,\n  formatRGB,\n} from '../utils/format';\nimport { withBaseColor } from '../utils/hoc';\nimport './ColorCard.css';\n\nconst ColorCard = ({\n  children,\n  className,\n  color,\n  properties = ['rgb', 'cmyk', 'hsl', 'hsv'],\n  hideProperties = false,\n  copyable = true,\n  position = 'top-left',\n  size = 'flex',\n  onSelectColor,\n}) => {\n  const [colorData, setColorData] = useState({\n    color: new Color(color),\n    hex: color,\n    light: false,\n    dark: false,\n  });\n\n  useEffect(() => {\n    const _color = new Color(color);\n    const whiteContrast = _color.contrast(white);\n    const blackContrast = _color.contrast(black);\n    setColorData({\n      color: _color,\n      hex: _color.hex().toLowerCase(),\n      light: blackContrast >= whiteContrast,\n      dark: whiteContrast > blackContrast,\n    });\n  }, [color]);\n\n  const selectColor = (event) => {\n    onSelectColor(colorData.hex);\n\n    if (event.target && event.target.blur) {\n      event.target.blur();\n    }\n  };\n\n  return (\n    <div\n      className={classNames(\n        'color-card',\n        {\n          'color-card--light': colorData.light,\n          'color-card--dark': colorData.dark,\n        },\n        {\n          [`color-card--${position}`]: position,\n          [`color-card--${size}`]: size,\n        },\n        {\n          'color-card--selectable': onSelectColor,\n        },\n        className\n      )}\n      onClick={onSelectColor && selectColor}\n      onKeyDown={onSelectColor && enterKeyHandler(selectColor)}\n      role={onSelectColor && 'button'}\n      tabIndex={onSelectColor && '0'}\n      style={{ backgroundColor: colorData.hex }}\n    >\n      {!hideProperties && (\n        <div\n          className=\"color-card__properties\"\n          role=\"button\"\n          tabIndex=\"-1\"\n          onClick={(event) => event.stopPropagation()}\n          onKeyDown={enterKeyHandler()}\n        >\n          <div key=\"hex\" className=\"color-card__hex\">\n            <span className=\"typography-hex\">{colorData.hex}</span>\n            {copyable && (\n              <div className=\"color-card__copy\">\n                <MaterialIconButton\n                  aria-label=\"Copy\"\n                  className=\"color-card__copy-button\"\n                  color=\"inherit\"\n                  onClick={(event) => {\n                    event.stopPropagation();\n                    document.dispatchEvent(\n                      new CustomEvent('CopyColorToClipboard', {\n                        detail: colorData.hex.toLowerCase(),\n                      })\n                    );\n                  }}\n                >\n                  <MaterialIcon>content_copy</MaterialIcon>\n                </MaterialIconButton>\n              </div>\n            )}\n          </div>\n          <div className=\"color-card__secondary-properties typography-properties\">\n            {properties.map((property) => {\n              switch (property) {\n                case 'rgb':\n                  return <div key=\"rgb\">{formatRGB(colorData.color)}</div>;\n                case 'cmyk':\n                  return <div key=\"cmyk\">{formatCMYK(colorData.color)}</div>;\n                case 'hsl':\n                  return <div key=\"hsl\">{formatHSL(colorData.color)}</div>;\n                case 'hsv':\n                  return <div key=\"hsv\">{formatHSV(colorData.color)}</div>;\n                case 'luminance':\n                  return (\n                    <div key=\"luminance\">\n                      {formatLuminance(colorData.color)}\n                    </div>\n                  );\n                default:\n                  return null;\n              }\n            })}\n          </div>\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n\nColorCard.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  baseColor: PropTypes.string,\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  properties: PropTypes.arrayOf(\n    PropTypes.oneOf(['rgb', 'cmyk', 'hsl', 'hsv', 'luminance'])\n  ),\n  hideProperties: PropTypes.bool,\n  copyable: PropTypes.bool,\n  position: PropTypes.oneOf([\n    'top-left',\n    'top-right',\n    'bottom-left',\n    'bottom-right',\n  ]),\n  size: PropTypes.oneOf(['small', 'medium', 'large', 'flex']),\n  onSelectColor: PropTypes.func,\n};\n\nexport default withBaseColor(ColorCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './ColorGroup.css';\n\nconst ColorGroup = ({ children, className, layout = 'column' }) => (\n  <div\n    className={classNames(\n      'color-group',\n      { [`color-group--${layout}`]: layout },\n      className\n    )}\n  >\n    {children}\n  </div>\n);\n\nColorGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  layout: PropTypes.oneOf(['column', 'column-reverse', 'row', 'row-reverse']),\n};\n\nexport default ColorGroup;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Color from 'color';\nimport ColorCard from './ColorCard';\nimport { white, black, gray } from '../utils/colors';\nimport './ColorPalette.css';\n\nconst types = {\n  hues: 'hues',\n  tintsAndShades: 'tintsAndShades',\n  tints: 'tints',\n  shades: 'shades',\n  tones: 'tones',\n  lighten: 'lighten',\n  darken: 'darken',\n  saturated: 'saturated',\n  desaturated: 'desaturated',\n};\n\nconst ColorPalette = ({\n  className,\n  type,\n  baseColor,\n  length = 10,\n  increment = 0.1,\n  includeBaseColor = false,\n  reversed = false,\n  layout = 'row',\n  onSelectColor = () => {},\n}) => {\n  const [palette, setPalette] = useState([]);\n\n  useEffect(() => {\n    const base = new Color(baseColor);\n    const colors = includeBaseColor ? [base.hex()] : [];\n    const lightness = base.lightness();\n    const saturation = base.saturationl();\n\n    for (let i = 0; i < length; i++) {\n      const weight = (i + 1) * increment;\n      let color = base;\n\n      switch (type) {\n        case types.hues:\n          color = color.rotate(weight * 360);\n          break;\n        case types.tintsAndShades:\n          if (i < length / 2) {\n            color = color.mix(white, 0.5 - weight);\n          } else {\n            color = color.mix(black, weight - 0.5);\n          }\n          break;\n        case types.tints:\n          color = color.mix(white, weight);\n          break;\n        case types.shades:\n          color = color.mix(black, weight);\n          break;\n        case types.tones:\n          color = color.mix(gray, weight);\n          break;\n        case types.lighten:\n          color = color.lightness(lightness + weight * (100 - lightness));\n          break;\n        case types.darken:\n          color = color.lightness(color.lightness() * (1 - weight));\n          break;\n        case types.saturated:\n          color = color.saturationl(saturation + weight * (100 - saturation));\n          break;\n        case types.desaturated:\n          color = color.saturationl(color.saturationl() * (1 - weight));\n          break;\n        default:\n          break;\n      }\n\n      colors.push(color.hex());\n    }\n\n    if (reversed) {\n      setPalette(colors.reverse());\n    } else {\n      setPalette(colors);\n    }\n  }, [baseColor, includeBaseColor, increment, length, reversed, type]);\n\n  return (\n    <div\n      className={classNames(\n        'color-palette',\n        { [`color-palette--${layout}`]: layout },\n        type,\n        className\n      )}\n    >\n      {palette.map((color, index) => (\n        <ColorCard\n          key={index}\n          color={color}\n          size=\"flex\"\n          onSelectColor={onSelectColor}\n        />\n      ))}\n    </div>\n  );\n};\n\nColorPalette.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.oneOf(Object.values(types)).isRequired,\n  baseColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    .isRequired,\n  length: PropTypes.number,\n  increment: PropTypes.number,\n  includeBaseColor: PropTypes.bool,\n  reversed: PropTypes.bool,\n  layout: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n  onSelectColor: PropTypes.func,\n};\n\nColorPalette.types = types;\n\nexport default ColorPalette;\n","import React, { useEffect, useState } from 'react';\nimport {\n  MaterialIcon,\n  MaterialIconButton,\n  MaterialSnackbar,\n} from '../components/material';\nimport { copyToClipboard } from '../utils/eventHandlers';\n\nconst CopyToClipboardToast = () => {\n  const [copy, setCopy] = useState(null);\n\n  useEffect(() => {\n    const listener = (event) => {\n      setCopy(null);\n      copyToClipboard(event.detail);\n      setTimeout(() => {\n        setCopy(event.detail);\n      });\n    };\n    document.addEventListener('CopyColorToClipboard', listener);\n    return () => {\n      document.removeEventListener('CopyColorToClipboard', listener);\n    };\n  }, []);\n\n  return (\n    <MaterialSnackbar\n      action={\n        <MaterialIconButton\n          aria-label=\"Close\"\n          color=\"inherit\"\n          onClick={() => setCopy(null)}\n        >\n          <MaterialIcon>close</MaterialIcon>\n        </MaterialIconButton>\n      }\n      autoHideDuration={3000}\n      open={Boolean(copy)}\n      onClose={() => {\n        setCopy(null);\n      }}\n      message={copy && `\"${copy}\" copied to the clipboard`}\n    />\n  );\n};\n\nexport default CopyToClipboardToast;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PageHeader.css';\n\nconst PageHeader = ({ children, className, layout }) => (\n  <header\n    className={classNames(\n      'page-header',\n      { [`page-header--layout-${layout}`]: layout },\n      className\n    )}\n  >\n    {children}\n  </header>\n);\n\nPageHeader.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  layout: PropTypes.oneOf(['center', 'space-between']),\n};\n\nexport default PageHeader;\n","import { applyMiddleware, compose } from 'redux';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst enhancers = composeEnhancers(applyMiddleware());\n\nexport default enhancers;\n","import { combineReducers } from 'redux';\nimport { randomColorHex } from './utils/colors';\nimport Color from 'color';\n\nconst defaultState = {\n  baseColors: [randomColorHex()],\n  baseColorIndex: 0,\n  secondaryBaseColors: ['#000000'],\n  secondaryBaseColorIndex: 0,\n  selectedHarmony: null,\n  selectedColorBlindness: null,\n};\n\nconst setSelectedHarmony = (state, action) => {\n  return { ...state, selectedHarmony: action.harmony };\n};\n\nconst setSelectedColorBlindness = (state, action) => {\n  return { ...state, selectedColorBlindness: action.colorBlindness };\n};\n\nconst addBaseColor = (state, color) => {\n  if (\n    state.baseColors.length > 0 &&\n    state.baseColors[state.baseColors.length - 1] === color\n  ) {\n    return state;\n  }\n  const baseColors = state.baseColors\n    .slice(0, state.baseColorIndex + 1)\n    .concat(color);\n  return {\n    ...state,\n    baseColors,\n    baseColorIndex: baseColors.length - 1,\n  };\n};\n\nconst addSecondaryBaseColor = (state, color) => {\n  if (\n    state.secondaryBaseColors.length > 0 &&\n    state.secondaryBaseColors[state.secondaryBaseColors.length - 1] === color\n  ) {\n    return state;\n  }\n  const secondaryBaseColors = state.secondaryBaseColors\n    .slice(0, state.secondaryBaseColorIndex + 1)\n    .concat(color);\n  return {\n    ...state,\n    secondaryBaseColors: secondaryBaseColors,\n    secondaryBaseColorIndex: secondaryBaseColors.length - 1,\n  };\n};\n\nconst setBaseColor = (state, action) => {\n  try {\n    // eslint-disable-next-line no-new\n    new Color(action.color);\n    return addBaseColor(state, action.color.toLowerCase());\n  } catch {\n    return state;\n  }\n};\n\nconst setSecondaryBaseColor = (state, action) => {\n  try {\n    // eslint-disable-next-line no-new\n    new Color(action.color);\n    return addSecondaryBaseColor(state, action.color.toLowerCase());\n  } catch {\n    return state;\n  }\n};\n\nconst shuffleBaseColor = (state, action) =>\n  addBaseColor(state, randomColorHex());\n\nconst shuffleSecondaryBaseColor = (state, action) =>\n  addSecondaryBaseColor(state, randomColorHex());\n\nconst redoBaseColor = (state, action) => {\n  return {\n    ...state,\n    baseColorIndex: Math.min(\n      state.baseColorIndex + 1,\n      state.baseColors.length - 1\n    ),\n  };\n};\n\nconst redoSecondaryBaseColor = (state, action) => {\n  return {\n    ...state,\n    secondaryBaseColorIndex: Math.min(\n      state.secondaryBaseColorIndex + 1,\n      state.secondaryBaseColors.length - 1\n    ),\n  };\n};\n\nconst undoBaseColor = (state, action) => {\n  return {\n    ...state,\n    baseColorIndex: Math.max(state.baseColorIndex - 1, 0),\n  };\n};\n\nconst undoSecondaryBaseColor = (state, action) => {\n  return {\n    ...state,\n    secondaryBaseColorIndex: Math.max(state.secondaryBaseColorIndex - 1, 0),\n  };\n};\n\nconst handlers = {\n  SET_SELECTED_HARMONY: setSelectedHarmony,\n  SET_SELECTED_COLOR_BLINDNESS: setSelectedColorBlindness,\n  SET_BASE_COLOR: setBaseColor,\n  SET_SECONDARY_BASE_COLOR: setSecondaryBaseColor,\n  SHUFFLE_BASE_COLOR: shuffleBaseColor,\n  SHUFFLE_SECONDARY_BASE_COLOR: shuffleSecondaryBaseColor,\n  REDO_BASE_COLOR: redoBaseColor,\n  REDO_SECONDARY_BASE_COLOR: redoSecondaryBaseColor,\n  UNDO_BASE_COLOR: undoBaseColor,\n  UNDO_SECONDARY_BASE_COLOR: undoSecondaryBaseColor,\n};\n\nconst color = (state = defaultState, action) => {\n  return handlers[action.type] ? handlers[action.type](state, action) : state;\n};\n\nconst reducers = combineReducers({\n  color: color,\n});\n\nexport default reducers;\n","import { createStore } from 'redux';\nimport middleware from './middleware';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, middleware);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { AppHeader, CopyToClipboardToast } from './components';\nimport Routes from './routes';\nimport store from './store';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <AppHeader />\n    <main>\n      <Routes />\n    </main>\n    <CopyToClipboardToast />\n  </div>\n);\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router basename=\"/colorly\">\n      <CssBaseline />\n      <App />\n    </Router>\n  </Provider>\n);\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport './styles/colors.css';\nimport './styles/typography.css';\nimport './styles/objects.css';\nimport './styles/spacing.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}